// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EntityMessages.proto

#ifndef PROTOBUF_EntityMessages_2eproto__INCLUDED
#define PROTOBUF_EntityMessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_EntityMessages_2eproto();
void protobuf_AssignDesc_EntityMessages_2eproto();
void protobuf_ShutdownFile_EntityMessages_2eproto();

class INetVector2;
class IMessageNewObject_New;
class IMessageNewObject_Del;

// ===================================================================

class INetVector2 : public ::google::protobuf::Message {
 public:
  INetVector2();
  virtual ~INetVector2();

  INetVector2(const INetVector2& from);

  inline INetVector2& operator=(const INetVector2& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const INetVector2& default_instance();

  void Swap(INetVector2* other);

  // implements Message ----------------------------------------------

  inline INetVector2* New() const { return New(NULL); }

  INetVector2* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const INetVector2& from);
  void MergeFrom(const INetVector2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(INetVector2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:INetVector2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  float x_;
  float y_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_EntityMessages_2eproto();
  friend void protobuf_AssignDesc_EntityMessages_2eproto();
  friend void protobuf_ShutdownFile_EntityMessages_2eproto();

  void InitAsDefaultInstance();
  static INetVector2* default_instance_;
};
// -------------------------------------------------------------------

class IMessageNewObject_New : public ::google::protobuf::Message {
 public:
  IMessageNewObject_New();
  virtual ~IMessageNewObject_New();

  IMessageNewObject_New(const IMessageNewObject_New& from);

  inline IMessageNewObject_New& operator=(const IMessageNewObject_New& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IMessageNewObject_New& default_instance();

  void Swap(IMessageNewObject_New* other);

  // implements Message ----------------------------------------------

  inline IMessageNewObject_New* New() const { return New(NULL); }

  IMessageNewObject_New* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IMessageNewObject_New& from);
  void MergeFrom(const IMessageNewObject_New& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMessageNewObject_New* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:IMessageNewObject_New)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_EntityMessages_2eproto();
  friend void protobuf_AssignDesc_EntityMessages_2eproto();
  friend void protobuf_ShutdownFile_EntityMessages_2eproto();

  void InitAsDefaultInstance();
  static IMessageNewObject_New* default_instance_;
};
// -------------------------------------------------------------------

class IMessageNewObject_Del : public ::google::protobuf::Message {
 public:
  IMessageNewObject_Del();
  virtual ~IMessageNewObject_Del();

  IMessageNewObject_Del(const IMessageNewObject_Del& from);

  inline IMessageNewObject_Del& operator=(const IMessageNewObject_Del& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IMessageNewObject_Del& default_instance();

  void Swap(IMessageNewObject_Del* other);

  // implements Message ----------------------------------------------

  inline IMessageNewObject_Del* New() const { return New(NULL); }

  IMessageNewObject_Del* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IMessageNewObject_Del& from);
  void MergeFrom(const IMessageNewObject_Del& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMessageNewObject_Del* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IMessageNewObject_Del)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_EntityMessages_2eproto();
  friend void protobuf_AssignDesc_EntityMessages_2eproto();
  friend void protobuf_ShutdownFile_EntityMessages_2eproto();

  void InitAsDefaultInstance();
  static IMessageNewObject_Del* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// INetVector2

// optional float x = 1;
inline void INetVector2::clear_x() {
  x_ = 0;
}
inline float INetVector2::x() const {
  // @@protoc_insertion_point(field_get:INetVector2.x)
  return x_;
}
inline void INetVector2::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:INetVector2.x)
}

// optional float y = 2;
inline void INetVector2::clear_y() {
  y_ = 0;
}
inline float INetVector2::y() const {
  // @@protoc_insertion_point(field_get:INetVector2.y)
  return y_;
}
inline void INetVector2::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:INetVector2.y)
}

// -------------------------------------------------------------------

// IMessageNewObject_New

// optional uint32 id = 1;
inline void IMessageNewObject_New::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 IMessageNewObject_New::id() const {
  // @@protoc_insertion_point(field_get:IMessageNewObject_New.id)
  return id_;
}
inline void IMessageNewObject_New::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:IMessageNewObject_New.id)
}

// optional uint32 type = 2;
inline void IMessageNewObject_New::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 IMessageNewObject_New::type() const {
  // @@protoc_insertion_point(field_get:IMessageNewObject_New.type)
  return type_;
}
inline void IMessageNewObject_New::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:IMessageNewObject_New.type)
}

// optional string name = 3;
inline void IMessageNewObject_New::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMessageNewObject_New::name() const {
  // @@protoc_insertion_point(field_get:IMessageNewObject_New.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMessageNewObject_New::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IMessageNewObject_New.name)
}
inline void IMessageNewObject_New::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IMessageNewObject_New.name)
}
inline void IMessageNewObject_New::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IMessageNewObject_New.name)
}
inline ::std::string* IMessageNewObject_New::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:IMessageNewObject_New.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMessageNewObject_New::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMessageNewObject_New::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:IMessageNewObject_New.name)
}

// -------------------------------------------------------------------

// IMessageNewObject_Del

// optional uint32 id = 1;
inline void IMessageNewObject_Del::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 IMessageNewObject_Del::id() const {
  // @@protoc_insertion_point(field_get:IMessageNewObject_Del.id)
  return id_;
}
inline void IMessageNewObject_Del::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:IMessageNewObject_Del.id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EntityMessages_2eproto__INCLUDED
