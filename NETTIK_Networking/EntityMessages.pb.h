// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EntityMessages.proto

#ifndef PROTOBUF_EntityMessages_2eproto__INCLUDED
#define PROTOBUF_EntityMessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_EntityMessages_2eproto();
void protobuf_AssignDesc_EntityMessages_2eproto();
void protobuf_ShutdownFile_EntityMessages_2eproto();

class INetworkAssociatedObject;
class INetworkMapAdd;
class INetworkMapRemove;
class INetworkMapUpdate;

// ===================================================================

class INetworkAssociatedObject : public ::google::protobuf::Message {
 public:
  INetworkAssociatedObject();
  virtual ~INetworkAssociatedObject();

  INetworkAssociatedObject(const INetworkAssociatedObject& from);

  inline INetworkAssociatedObject& operator=(const INetworkAssociatedObject& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const INetworkAssociatedObject& default_instance();

  void Swap(INetworkAssociatedObject* other);

  // implements Message ----------------------------------------------

  inline INetworkAssociatedObject* New() const { return New(NULL); }

  INetworkAssociatedObject* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const INetworkAssociatedObject& from);
  void MergeFrom(const INetworkAssociatedObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(INetworkAssociatedObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string instance_name = 1;
  void clear_instance_name();
  static const int kInstanceNameFieldNumber = 1;
  const ::std::string& instance_name() const;
  void set_instance_name(const ::std::string& value);
  void set_instance_name(const char* value);
  void set_instance_name(const char* value, size_t size);
  ::std::string* mutable_instance_name();
  ::std::string* release_instance_name();
  void set_allocated_instance_name(::std::string* instance_name);

  // optional uint32 network_code = 2;
  void clear_network_code();
  static const int kNetworkCodeFieldNumber = 2;
  ::google::protobuf::uint32 network_code() const;
  void set_network_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:INetworkAssociatedObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr instance_name_;
  ::google::protobuf::uint32 network_code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_EntityMessages_2eproto();
  friend void protobuf_AssignDesc_EntityMessages_2eproto();
  friend void protobuf_ShutdownFile_EntityMessages_2eproto();

  void InitAsDefaultInstance();
  static INetworkAssociatedObject* default_instance_;
};
// -------------------------------------------------------------------

class INetworkMapAdd : public ::google::protobuf::Message {
 public:
  INetworkMapAdd();
  virtual ~INetworkMapAdd();

  INetworkMapAdd(const INetworkMapAdd& from);

  inline INetworkMapAdd& operator=(const INetworkMapAdd& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const INetworkMapAdd& default_instance();

  void Swap(INetworkMapAdd* other);

  // implements Message ----------------------------------------------

  inline INetworkMapAdd* New() const { return New(NULL); }

  INetworkMapAdd* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const INetworkMapAdd& from);
  void MergeFrom(const INetworkMapAdd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(INetworkMapAdd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .INetworkAssociatedObject target_object = 1;
  bool has_target_object() const;
  void clear_target_object();
  static const int kTargetObjectFieldNumber = 1;
  const ::INetworkAssociatedObject& target_object() const;
  ::INetworkAssociatedObject* mutable_target_object();
  ::INetworkAssociatedObject* release_target_object();
  void set_allocated_target_object(::INetworkAssociatedObject* target_object);

  // optional uint32 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // optional bytes value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:INetworkMapAdd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::INetworkAssociatedObject* target_object_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 key_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_EntityMessages_2eproto();
  friend void protobuf_AssignDesc_EntityMessages_2eproto();
  friend void protobuf_ShutdownFile_EntityMessages_2eproto();

  void InitAsDefaultInstance();
  static INetworkMapAdd* default_instance_;
};
// -------------------------------------------------------------------

class INetworkMapRemove : public ::google::protobuf::Message {
 public:
  INetworkMapRemove();
  virtual ~INetworkMapRemove();

  INetworkMapRemove(const INetworkMapRemove& from);

  inline INetworkMapRemove& operator=(const INetworkMapRemove& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const INetworkMapRemove& default_instance();

  void Swap(INetworkMapRemove* other);

  // implements Message ----------------------------------------------

  inline INetworkMapRemove* New() const { return New(NULL); }

  INetworkMapRemove* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const INetworkMapRemove& from);
  void MergeFrom(const INetworkMapRemove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(INetworkMapRemove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .INetworkAssociatedObject target_object = 1;
  bool has_target_object() const;
  void clear_target_object();
  static const int kTargetObjectFieldNumber = 1;
  const ::INetworkAssociatedObject& target_object() const;
  ::INetworkAssociatedObject* mutable_target_object();
  ::INetworkAssociatedObject* release_target_object();
  void set_allocated_target_object(::INetworkAssociatedObject* target_object);

  // optional uint32 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:INetworkMapRemove)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::INetworkAssociatedObject* target_object_;
  ::google::protobuf::uint32 key_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_EntityMessages_2eproto();
  friend void protobuf_AssignDesc_EntityMessages_2eproto();
  friend void protobuf_ShutdownFile_EntityMessages_2eproto();

  void InitAsDefaultInstance();
  static INetworkMapRemove* default_instance_;
};
// -------------------------------------------------------------------

class INetworkMapUpdate : public ::google::protobuf::Message {
 public:
  INetworkMapUpdate();
  virtual ~INetworkMapUpdate();

  INetworkMapUpdate(const INetworkMapUpdate& from);

  inline INetworkMapUpdate& operator=(const INetworkMapUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const INetworkMapUpdate& default_instance();

  void Swap(INetworkMapUpdate* other);

  // implements Message ----------------------------------------------

  inline INetworkMapUpdate* New() const { return New(NULL); }

  INetworkMapUpdate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const INetworkMapUpdate& from);
  void MergeFrom(const INetworkMapUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(INetworkMapUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .INetworkAssociatedObject target_object = 1;
  bool has_target_object() const;
  void clear_target_object();
  static const int kTargetObjectFieldNumber = 1;
  const ::INetworkAssociatedObject& target_object() const;
  ::INetworkAssociatedObject* mutable_target_object();
  ::INetworkAssociatedObject* release_target_object();
  void set_allocated_target_object(::INetworkAssociatedObject* target_object);

  // optional uint32 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // optional bytes value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:INetworkMapUpdate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::INetworkAssociatedObject* target_object_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 key_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_EntityMessages_2eproto();
  friend void protobuf_AssignDesc_EntityMessages_2eproto();
  friend void protobuf_ShutdownFile_EntityMessages_2eproto();

  void InitAsDefaultInstance();
  static INetworkMapUpdate* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// INetworkAssociatedObject

// optional string instance_name = 1;
inline void INetworkAssociatedObject::clear_instance_name() {
  instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& INetworkAssociatedObject::instance_name() const {
  // @@protoc_insertion_point(field_get:INetworkAssociatedObject.instance_name)
  return instance_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void INetworkAssociatedObject::set_instance_name(const ::std::string& value) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:INetworkAssociatedObject.instance_name)
}
inline void INetworkAssociatedObject::set_instance_name(const char* value) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:INetworkAssociatedObject.instance_name)
}
inline void INetworkAssociatedObject::set_instance_name(const char* value, size_t size) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:INetworkAssociatedObject.instance_name)
}
inline ::std::string* INetworkAssociatedObject::mutable_instance_name() {
  
  // @@protoc_insertion_point(field_mutable:INetworkAssociatedObject.instance_name)
  return instance_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* INetworkAssociatedObject::release_instance_name() {
  
  return instance_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void INetworkAssociatedObject::set_allocated_instance_name(::std::string* instance_name) {
  if (instance_name != NULL) {
    
  } else {
    
  }
  instance_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_name);
  // @@protoc_insertion_point(field_set_allocated:INetworkAssociatedObject.instance_name)
}

// optional uint32 network_code = 2;
inline void INetworkAssociatedObject::clear_network_code() {
  network_code_ = 0u;
}
inline ::google::protobuf::uint32 INetworkAssociatedObject::network_code() const {
  // @@protoc_insertion_point(field_get:INetworkAssociatedObject.network_code)
  return network_code_;
}
inline void INetworkAssociatedObject::set_network_code(::google::protobuf::uint32 value) {
  
  network_code_ = value;
  // @@protoc_insertion_point(field_set:INetworkAssociatedObject.network_code)
}

// -------------------------------------------------------------------

// INetworkMapAdd

// optional .INetworkAssociatedObject target_object = 1;
inline bool INetworkMapAdd::has_target_object() const {
  return !_is_default_instance_ && target_object_ != NULL;
}
inline void INetworkMapAdd::clear_target_object() {
  if (GetArenaNoVirtual() == NULL && target_object_ != NULL) delete target_object_;
  target_object_ = NULL;
}
inline const ::INetworkAssociatedObject& INetworkMapAdd::target_object() const {
  // @@protoc_insertion_point(field_get:INetworkMapAdd.target_object)
  return target_object_ != NULL ? *target_object_ : *default_instance_->target_object_;
}
inline ::INetworkAssociatedObject* INetworkMapAdd::mutable_target_object() {
  
  if (target_object_ == NULL) {
    target_object_ = new ::INetworkAssociatedObject;
  }
  // @@protoc_insertion_point(field_mutable:INetworkMapAdd.target_object)
  return target_object_;
}
inline ::INetworkAssociatedObject* INetworkMapAdd::release_target_object() {
  
  ::INetworkAssociatedObject* temp = target_object_;
  target_object_ = NULL;
  return temp;
}
inline void INetworkMapAdd::set_allocated_target_object(::INetworkAssociatedObject* target_object) {
  delete target_object_;
  target_object_ = target_object;
  if (target_object) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:INetworkMapAdd.target_object)
}

// optional uint32 key = 2;
inline void INetworkMapAdd::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 INetworkMapAdd::key() const {
  // @@protoc_insertion_point(field_get:INetworkMapAdd.key)
  return key_;
}
inline void INetworkMapAdd::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:INetworkMapAdd.key)
}

// optional bytes value = 3;
inline void INetworkMapAdd::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& INetworkMapAdd::value() const {
  // @@protoc_insertion_point(field_get:INetworkMapAdd.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void INetworkMapAdd::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:INetworkMapAdd.value)
}
inline void INetworkMapAdd::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:INetworkMapAdd.value)
}
inline void INetworkMapAdd::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:INetworkMapAdd.value)
}
inline ::std::string* INetworkMapAdd::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:INetworkMapAdd.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* INetworkMapAdd::release_value() {
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void INetworkMapAdd::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:INetworkMapAdd.value)
}

// -------------------------------------------------------------------

// INetworkMapRemove

// optional .INetworkAssociatedObject target_object = 1;
inline bool INetworkMapRemove::has_target_object() const {
  return !_is_default_instance_ && target_object_ != NULL;
}
inline void INetworkMapRemove::clear_target_object() {
  if (GetArenaNoVirtual() == NULL && target_object_ != NULL) delete target_object_;
  target_object_ = NULL;
}
inline const ::INetworkAssociatedObject& INetworkMapRemove::target_object() const {
  // @@protoc_insertion_point(field_get:INetworkMapRemove.target_object)
  return target_object_ != NULL ? *target_object_ : *default_instance_->target_object_;
}
inline ::INetworkAssociatedObject* INetworkMapRemove::mutable_target_object() {
  
  if (target_object_ == NULL) {
    target_object_ = new ::INetworkAssociatedObject;
  }
  // @@protoc_insertion_point(field_mutable:INetworkMapRemove.target_object)
  return target_object_;
}
inline ::INetworkAssociatedObject* INetworkMapRemove::release_target_object() {
  
  ::INetworkAssociatedObject* temp = target_object_;
  target_object_ = NULL;
  return temp;
}
inline void INetworkMapRemove::set_allocated_target_object(::INetworkAssociatedObject* target_object) {
  delete target_object_;
  target_object_ = target_object;
  if (target_object) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:INetworkMapRemove.target_object)
}

// optional uint32 key = 2;
inline void INetworkMapRemove::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 INetworkMapRemove::key() const {
  // @@protoc_insertion_point(field_get:INetworkMapRemove.key)
  return key_;
}
inline void INetworkMapRemove::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:INetworkMapRemove.key)
}

// -------------------------------------------------------------------

// INetworkMapUpdate

// optional .INetworkAssociatedObject target_object = 1;
inline bool INetworkMapUpdate::has_target_object() const {
  return !_is_default_instance_ && target_object_ != NULL;
}
inline void INetworkMapUpdate::clear_target_object() {
  if (GetArenaNoVirtual() == NULL && target_object_ != NULL) delete target_object_;
  target_object_ = NULL;
}
inline const ::INetworkAssociatedObject& INetworkMapUpdate::target_object() const {
  // @@protoc_insertion_point(field_get:INetworkMapUpdate.target_object)
  return target_object_ != NULL ? *target_object_ : *default_instance_->target_object_;
}
inline ::INetworkAssociatedObject* INetworkMapUpdate::mutable_target_object() {
  
  if (target_object_ == NULL) {
    target_object_ = new ::INetworkAssociatedObject;
  }
  // @@protoc_insertion_point(field_mutable:INetworkMapUpdate.target_object)
  return target_object_;
}
inline ::INetworkAssociatedObject* INetworkMapUpdate::release_target_object() {
  
  ::INetworkAssociatedObject* temp = target_object_;
  target_object_ = NULL;
  return temp;
}
inline void INetworkMapUpdate::set_allocated_target_object(::INetworkAssociatedObject* target_object) {
  delete target_object_;
  target_object_ = target_object;
  if (target_object) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:INetworkMapUpdate.target_object)
}

// optional uint32 key = 2;
inline void INetworkMapUpdate::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 INetworkMapUpdate::key() const {
  // @@protoc_insertion_point(field_get:INetworkMapUpdate.key)
  return key_;
}
inline void INetworkMapUpdate::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:INetworkMapUpdate.key)
}

// optional bytes value = 3;
inline void INetworkMapUpdate::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& INetworkMapUpdate::value() const {
  // @@protoc_insertion_point(field_get:INetworkMapUpdate.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void INetworkMapUpdate::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:INetworkMapUpdate.value)
}
inline void INetworkMapUpdate::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:INetworkMapUpdate.value)
}
inline void INetworkMapUpdate::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:INetworkMapUpdate.value)
}
inline ::std::string* INetworkMapUpdate::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:INetworkMapUpdate.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* INetworkMapUpdate::release_value() {
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void INetworkMapUpdate::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:INetworkMapUpdate.value)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_EntityMessages_2eproto__INCLUDED
